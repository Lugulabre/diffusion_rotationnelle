for (i in 1:ncol(herg.data)) {
herg.data[,i] = as.numeric(herg.data[,i])
}
herg.data = herg.data[,-which(apply(herg.data, 2, sd) == 0)]
herg.data = herg.data[-which(herg.data$IC50 > 500),]
hist(herg.data$IC50)
herg.data$IC50 = log(herg.data$IC50)
epsilon = 1.645
ICP = mean(herg.data$IC50)+ (epsilon*(sd(herg.data$IC50)/sqrt(length(herg.data$IC50))))
ICN = mean(herg.data$IC50) - (epsilon*(sd(herg.data$IC50)/sqrt(length(herg.data$IC50))))
hist(herg.data$IC50, freq = F, ylim = c(0,0.2))
normX <- seq(from=min(herg.data$IC50), to=max(herg.data$IC50), by=0.01)
normY <- dnorm(x=normX, mean=mean(herg.data$IC50), sd=sd(herg.data$IC50))
lines(x=normX, y=normY, col='red')
abline(v = ICP, col = 'red')
abline(v = ICN, col = 'red')
library(FactoMineR)
APCherg = PCA(herg.data, graph = F)
plot(APCherg$eig[,"cumulative percentage of variance"], xlab = "Component",
ylab = "cumulative percentage of variance")
abline(h = 80, col = 'red')
abline(v = 12, col = 'blue')
library(FactoMineR)
APCherg = PCA(herg.data, graph = F)
plot(APCherg$eig[,"cumulative percentage of variance"], xlab = "Component",
ylab = "cumulative percentage of variance")
abline(h = 80, col = 'red')
abline(v = 11, col = 'blue')
APCherg$eig
library(FactoMineR)
APCherg = PCA(herg.data, graph = F)
plot(APCherg$eig[,"cumulative percentage of variance"], xlab = "Component",
ylab = "cumulative percentage of variance")
abline(h = 80, col = 'red')
abline(v = 11, col = 'blue')
boxplot(herg.data)
herg.data.scale = as.data.frame(apply(herg.data, 2, scale))
herg.data.scale = as.data.frame(apply(herg.data, 2, scale))
boxplot(herg.data)
herg.data.scale = as.data.frame(apply(herg.data, 2, scale))
boxplot(herg.data.scale)
Ind.App = sample(nrow(herg.data),size = (2*nrow(herg.data)/3), replace = FALSE)
herg.App = herg.data[vIndApp,]
Ind.App = sample(nrow(herg.data),size = (2*nrow(herg.data)/3), replace = FALSE)
herg.App = herg.data[Ind.App,]
Ind.Test = setdiff(1:nrow(herg.data), vIndApp)
Ind.Test = setdiff(1:nrow(herg.data), Ind.App)
herg.Test = herg.data[Ind.Test,]
SMRmodel = lm(IC50~SMR_VSA5, data = herg.App)
summary(SMRmodel)
hist(SMRmodel$residuals, freq = FALSE, main = "", xlab = "residus")
xval <- sort(SMRmodel$residuals)
yval <- dnorm(x=xval, mean=mean(SMRmodel$residuals),
sd=sqrt(var(SMRmodel$residuals)))
lines(x=xval, y=yval, col=2, lwd=2)
hist(SMRmodel$residuals, freq = FALSE, main = "", xlab = "residus")
xval <- sort(SMRmodel$residuals)
yval <- dnorm(x=xval, mean=mean(SMRmodel$residuals),
sd=sqrt(var(SMRmodel$residuals)))
lines(x=xval, y=yval, col=2, lwd=2)
plot(x = SMRmodel$fitted.values, y = SMRmodel$residuals, xlab = "valeurs predites", ylab = "residus")
Ind.App = sample(nrow(herg.data),size = (2*nrow(herg.data)/3), replace = FALSE)
herg.App = herg.data[Ind.App,]
Ind.Test = setdiff(1:nrow(herg.data), Ind.App)
herg.Test = herg.data[Ind.Test,]
SMRmodel = lm(IC50~SMR_VSA5, data = herg.App)
summary(SMRmodel)
Ind.App = sample(nrow(herg.data),size = (2*nrow(herg.data)/3), replace = FALSE)
herg.App = herg.data[Ind.App,]
Ind.Test = setdiff(1:nrow(herg.data), Ind.App)
herg.Test = herg.data[Ind.Test,]
SMRmodel = lm(IC50~SMR_VSA5, data = herg.App)
summary(SMRmodel)
hist(SMRmodel$residuals, freq = FALSE, main = "", xlab = "residus")
xval <- sort(SMRmodel$residuals)
yval <- dnorm(x=xval, mean=mean(SMRmodel$residuals),
sd=sqrt(var(SMRmodel$residuals)))
lines(x=xval, y=yval, col=2, lwd=2)
plot(x = SMRmodel$fitted.values, y = SMRmodel$residuals, xlab = "valeurs predites", ylab = "residus")
hist(SMRmodel$residuals, freq = FALSE, main = "", xlab = "residus", main = "Histogramme des residus")
hist(SMRmodel$residuals, freq = FALSE, main = "", xlab = "residus", main = paste("Histogramme des residus"))
hist(SMRmodel$residuals, freq = FALSE, main = "Histogramme des residus", xlab = "residus")
xval <- sort(SMRmodel$residuals)
yval <- dnorm(x=xval, mean=mean(SMRmodel$residuals),
sd=sqrt(var(SMRmodel$residuals)))
lines(x=xval, y=yval, col=2, lwd=2)
plot(x = SMRmodel$fitted.values, y = SMRmodel$residuals, xlab = "valeurs predites", ylab = "residus", main = "residus en fonction des valeurs predites")
mean(SMRmodel$residuals)
hist(SMRmodel$residuals, freq = FALSE, main = "Histogramme des residus", xlab = "residus")
xval <- sort(SMRmodel$residuals)
yval <- dnorm(x=xval, mean=mean(SMRmodel$residuals),
sd=sqrt(var(SMRmodel$residuals)))
lines(x=xval, y=yval, col=2, lwd=2)
hist(SMRmodel$residuals, freq = FALSE, main = "Histogramme des residus", xlab = "residus", probability = T)
xval <- sort(SMRmodel$residuals)
yval <- dnorm(x=xval, mean=mean(SMRmodel$residuals),
sd=sqrt(var(SMRmodel$residuals)))
lines(x=xval, y=yval, col=2, lwd=2)
plot(x = SMRmodel$fitted.values, y = SMRmodel$residuals, xlab = "valeurs predites", ylab = "residus", main = "residus en fonction des valeurs predites")
abline(h = 0, col "red")
plot(x = SMRmodel$fitted.values, y = SMRmodel$residuals, xlab = "valeurs predites", ylab = "residus", main = "residus en fonction des valeurs predites")
abline(h = 0, col ="red")
plot(x = SMRmodel$fitted.values, y = SMRmodel$residuals, xlab = "valeurs predites", ylab = "residus", main = "residus en fonction des valeurs predites")
abline(h = 0, col ="red")
Ind.App = sample(nrow(herg.data),size = (2*nrow(herg.data)/3), replace = FALSE)
herg.App = herg.data[Ind.App,]
Ind.Test = setdiff(1:nrow(herg.data), Ind.App)
herg.Test = herg.data[Ind.Test,]
SMRmodel = lm(IC50~SMR_VSA5, data = herg.App)
summary(SMRmodel)
herg.data = read.table("hergdata_196des_for_R.txt",header = T, sep = "\t")
which(is.na(herg.data) == TRUE) #integer(0)
herg.data = herg.data[,-which(colnames(herg.data) == "Name")]
for (i in 1:ncol(herg.data)) {
herg.data[,i] = as.numeric(herg.data[,i])
}
herg.data = herg.data[,-which(apply(herg.data, 2, sd) == 0)]
herg.data = herg.data[-which(herg.data$IC50 > 500),]
hist(herg.data$IC50)
herg.data$IC50 = log(herg.data$IC50)
epsilon = 1.645
ICP = mean(herg.data$IC50)+ (epsilon*(sd(herg.data$IC50)/sqrt(length(herg.data$IC50))))
ICN = mean(herg.data$IC50) - (epsilon*(sd(herg.data$IC50)/sqrt(length(herg.data$IC50))))
hist(herg.data$IC50, freq = F, ylim = c(0,0.2))
normX <- seq(from=min(herg.data$IC50), to=max(herg.data$IC50), by=0.01)
normY <- dnorm(x=normX, mean=mean(herg.data$IC50), sd=sd(herg.data$IC50))
lines(x=normX, y=normY, col='red')
abline(v = ICP, col = 'red')
abline(v = ICN, col = 'red')
library(FactoMineR)
APCherg = PCA(herg.data, graph = F)
plot(APCherg$eig[,"cumulative percentage of variance"], xlab = "Component",
ylab = "cumulative percentage of variance")
abline(h = 80, col = 'red')
abline(v = 11, col = 'blue')
plot(APCherg, choix = "ind")
idvAb = c("32","109", "114", "117","156")
for (i in c(1:length(idvAb))) {
idvAb[i] = which(rownames(herg.data) == idvAb[i])
}
idvAb = as.integer(idvAb)
herg.data = herg.data[-idvAb,]
APChergCorr = PCA(herg.data, graph = F)
plot(APChergCorr, choix = "ind")
plot(APCherg, choix = "var")
boxplot(herg.data)
herg.data.scale = as.data.frame(apply(herg.data, 2, scale))
boxplot(herg.data.scale)
library(corrplot)
corrSMR = cor(herg.data$IC50,herg.data$SMR_VSA5)
corrFcharge = cor(herg.data$IC50,herg.data$FCharge)
corrSlogp = cor(herg.data$IC50,herg.data$SlogP)
vecCor = c("corrSMR" = abs(corrSMR),
"corrFcharge" = abs(corrFcharge),
"corrSlogp" = abs(corrSlogp))
print(vecCor[which(vecCor == max(vecCor))])
Ind.App = sample(nrow(herg.data),size = (2*nrow(herg.data)/3), replace = FALSE)
herg.App = herg.data[Ind.App,]
Ind.Test = setdiff(1:nrow(herg.data), Ind.App)
herg.Test = herg.data[Ind.Test,]
SMRmodel = lm(IC50~SMR_VSA5, data = herg.App)
summary(SMRmodel)
Ind.App = sample(nrow(herg.data),size = (2*nrow(herg.data)/3), replace = FALSE)
herg.App = herg.data[Ind.App,]
Ind.Test = setdiff(1:nrow(herg.data), Ind.App)
herg.Test = herg.data[Ind.Test,]
SMRmodel = lm(IC50~SMR_VSA5, data = herg.App)
summary(SMRmodel)
Ind.App = sample(nrow(herg.data),size = (2*nrow(herg.data)/3), replace = FALSE)
herg.App = herg.data[Ind.App,]
Ind.Test = setdiff(1:nrow(herg.data), Ind.App)
herg.Test = herg.data[Ind.Test,]
SMRmodel = lm(IC50~SMR_VSA5, data = herg.App)
summary(SMRmodel)
Ind.App = sample(nrow(herg.data),size = (2*nrow(herg.data)/3), replace = FALSE)
herg.App = herg.data[Ind.App,]
Ind.Test = setdiff(1:nrow(herg.data), Ind.App)
herg.Test = herg.data[Ind.Test,]
SMRmodel = lm(IC50~SMR_VSA5, data = herg.App)
summary(SMRmodel)
plot(x = SMRmodel$fitted.values, y = SMRmodel$residuals, xlab = "valeurs predites", ylab = "residus", main = "residus en fonction des valeurs predites")
abline(h = 0, col ="red")
hist(SMRmodel$residuals, freq = FALSE, main = "Histogramme des residus", xlab = "residus", probability = T)
xval <- sort(SMRmodel$residuals)
yval <- dnorm(x=xval, mean=mean(SMRmodel$residuals),
sd=sqrt(var(SMRmodel$residuals)))
lines(x=xval, y=yval, col=2, lwd=2)
View(herg.data)
data = read.table("rotacf2.xvg")
setwd("/Users/MAEL/Documents/M1_BI/Dynamique_moleculaire/projet/test_outil")
data = read.table("rotacf2.xvg")
setwd("/Users/MAEL/Documents/M1_BI/Dynamique_moleculaire/projet/test_outil")
data = read.table("rotacf2.xvg")
data$V1 = data$V1/500
plot(x = data$V1, y = data$V2, type = "l", col = "red",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf")
head(data$V1)
data = read.table("rotacf2.xvg")
plot(x = data$V1, y = data$V2, type = "l", col = "red",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf")
data = read.table("rotacf2.xvg")
setwd("/Users/MAEL/Documents/M1_BI/Dynamique_moleculaire/projet/test_outil")
data = read.table("rotacf2.xvg")
data$V1 = data$V1/500
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf")
head(data$V1)
data = read.table("rotacf2.xvg")
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf")
data = read.table("rotacf2.xvg")
data$V1 = data$V1/100
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf")
data = read.table("rotacf2.xvg")
data$V1 = data$V1/100
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)")
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)", lty = 3)
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)", lty = 2)
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)", lty = 4)
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)", pch = 3)
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)", pch = 2)
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)", pch = 6)
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)", type = "b")
plot(x = data$V1, y = data$V2, type = "l", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)", type = "p")
plot(x = data$V1, y = data$V2, type = "b", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)")
plot(x = data$V1, y = data$V2, type = "o", col = "blue",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf (H20)")
data = read.table("rotacf.xvg")
data$V1 = data$V1/500
plot(x = data$V1, y = data$V2, type = "o", col = "red",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf")
setwd("/Users/MAEL/Documents/M1_BI/Dynamique_moleculaire/projet/test_outil")
data = read.table("rotacf.xvg")
data2 = read.table("rotacf2.xvg")
data$V1 = data$V1/500
data2$V1 = data2$V1/100
plot(x = data$V1, y = data$V2, type = "l", col = "red",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf")
ablines(data2$V2)
abline(data2$V2)
lines(data2$V2)
lines(data2$V2, col = "blue")
setwd("/Users/MAEL/Documents/M1_BI/Dynamique_moleculaire/projet/test_outil")
data = read.table("rotacf.xvg")
data2 = read.table("rotacf2.xvg")
data$V1 = data$V1/500
data2$V1 = data2$V1/100
plot(x = data$V1, y = data$V2, type = "l", col = "red",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf")
lines(data2$V2, col = "blue")
head(data$V1)
legend(c("1BTA", "H20"), col = c("red", "blue"))
legend(80, 1.0,c("1BTA", "H20"), col = c("red", "blue"))
legend(80, 1.0,c("1BTA", "H20"), col = c("red", "blue"), lty = 1)
legend(70, 1.0,c("1BTA", "H20"), col = c("red", "blue"), lty = 1)
setwd("/Users/MAEL/Documents/M1_BI/Dynamique_moleculaire/projet/test_outil")
data = read.table("rotacf.xvg")
data2 = read.table("rotacf2.xvg")
data$V1 = data$V1/500
data2$V1 = data2$V1/100
plot(x = data$V1, y = data$V2, type = "l", col = "red",
xlab = "temps (ns)", ylab = "autocorrelation",
main = "Graphique obtenu avec rotacf")
lines(data2$V2, col = "blue")
legend(70, 1.0,c("1BTA", "H20"), col = c("red", "blue"), lty = 1)
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
getwd()
setwd("~/diffusion_rotationnelle")
setwd("../diffusion_rotationnelle")
setwd("./diffusion_rotationnelle")
setwd("Users")
setwd("Users/MAEL")
setwd("/Users/MAEL")
setwd("./diffusion_rotationnelle")
setwd("~/diffusion_rotationnelle")
setwd("/Users/MAEL/Documents/M1_BI/Dynamique_moleculaire/projet/diffusion_rotationnelle")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
View(data_h2o)
time_prot = seq(0, 100, 0.2)
time_prot = seq(0, 100, 0.02)
plot(data_prot$V1, data_prot$V2)
plot(data_prot$V1, data_prot$V2, type = "l", col = "red")
lines(data_h2o$V2)
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
time_prot = seq(0, 100, 0.02)
data_prot$V1 = data_prot$V1/100
data_h2o$V1 = data_h2o$V1/100
plot(data_prot$V1, data_prot$V2, type = "l", col = "red", xlim = c(0,200))
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
time_prot = seq(0, 100, 0.02)
data_prot$V1 = data_prot$V1/100
data_h2o$V1 = data_h2o$V1/100
plot(data_prot$V1, data_prot$V2, type = "l", col = "red", xlim = c(0,20))
lines(data_h2o$V2, type = "l", col = "blue")
View(data_h2o)
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
time_prot = seq(0, 100, 0.02)
plot(data_prot$V1, data_prot$V2, type = "l", col = "red", xlim = c(0,20))
lines(data_h2o$V2, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red", xlim = c(0,200), ylim = c(-0.2, 1.2))
lines(data_h2o$V2, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red", xlim = c(0,200), ylim = c(-0.2, 1.1))
lines(data_h2o$V2, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red", xlim = c(0,200), ylim = c(-0.2, 1.0))
lines(data_h2o$V2, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red" ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
lines(data_h2o$V2, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,200), ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
lines(data_h2o$V2, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,200), ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
lines(data_h2o$V2, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
lines(data_h2o$V2, type = "l", col = "blue")
View(data_h2o)
View(data)
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
#     xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
plot(data_h2o$V1, data_h2o$V2, type = "l", col = "red",
#     xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
data_prot[1,5000]
data_prot[5000, 1]
data_prot[5001, 1]
data_prot[10001, 1]
View(data_h2o)
time_prot = seq(0,100,0.01)
View(data_prot)
data_h20$V1 = data_h20$V1/10
plot(data_h2o$V1, data_h2o$V2, type = "l", col = "red",
#     xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
data_h20$V1 = data_h20$V1/10
plot(data_h2o$V1, data_h2o$V2, type = "l", col = "red",
#     xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
View(data_h2o)
data_h20$V1/10
data_h2o$V1 = data_h2o$V1/10
plot(data_h2o$V1, data_h2o$V2, type = "l", col = "red",
#     xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ps)")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
time_prot = seq(0,100,0.01)
data_prot$V1 = data_prot$V1/100
data_h2o$V1 = data_h2o$V1/10
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
#     xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2, type = "l", col = "blue")
plot(data_h2o$V1, data_h2o$V2, type = "l", col = "red",
#     xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
View(data_h2o)
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
data_prot$V1 = data_prot$V1/100
data_h2o$V1 = data_h2o$V1/10
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,20), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
data_prot$V1 = data_prot$V1/100
data_h2o$V1 = data_h2o$V1/10
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,10), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,10), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,100), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
data_prot$V1 = data_prot$V1/100
data_h2o$V1 = data_h2o$V1/10
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,100), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
data_prot$V1 = data_prot$V1/100
data_h2o$V1 = data_h2o$V1/10
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,20), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
plot(data_h2o$V1, data_h2o$V2, type = "l", col = "red",
#     xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
data_prot$V1 = data_prot$V1/100
data_h2o$V1 = data_h2o$V1/10
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,20), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
data_prot$V1 = data_prot$V1/100
data_h2o$V1 = data_h2o$V1/10
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
#     xlim = c(0,20), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,20), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,10), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,2), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,20), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
plot(data_h2o$V1, data_h2o$V2, type = "l", col = "red",
#     xlim = c(0,400), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,200), ylim = c(-0.2, 1.0),
xlab = "temps (ns)")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
install.packages("rminer")
library(rminer)
library("rminer")
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,200), ylim = c(-0.2, 1.0),
xlab = "temps")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
lines(exp(-data$V1/18.70749066))
lines(exp(-data_prot$V1/18.70749066))
data_prot = read.table("protein_result.txt")
data_h2o = read.table("h2o_result.txt")
plot(data_prot$V1, data_prot$V2, type = "l", col = "red",
xlim = c(0,200), ylim = c(-0.2, 1.0),
xlab = "temps")
lines(data_h2o$V2~data_h2o$V1, type = "l", col = "blue")
lines(exp(-data_prot$V1/18.70749066))
lines(exp(-data_prot$V1/0.0103079))
